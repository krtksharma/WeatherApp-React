{"version":3,"sources":["components/CityComponent.js","components/WeatherComponent.js","App.js","index.js"],"names":["WeatherLogo","styled","img","CityLabel","span","Searchbox","form","CityComponent","props","src","onSubmit","getWeather","onChange","event","onAdd","target","value","type","placeholder","WeatherIcons","WeatherCondition","div","Condition","Location","WeatherInfo","WeatherInfoContainer","InfoContainer","InfoIcon","InfoLabel","WeatherInfoComponent","icon","title","WeatherComponent","timeStamp","weather","isDay","includes","Math","floor","main","temp","description","name","sys","country","Date","getHours","getMinutes","humidity","wind","speed","pressure","Container","AppLabel","App","useState","city","updateCity","updateWeather","fetchWeather","a","preventDefault","Axios","get","response","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b83773a.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n// Styling Section.........\r\nconst WeatherLogo = styled.img`\r\nwidth:140px;\r\nheight: 140px;\r\nmargin: 40px auto;\r\n\r\n`;\r\nconst CityLabel = styled.span`\r\ndisplay:flex;\r\nflex-direction:row;\r\nalign:center;\r\nfont-size:18px;\r\nfont-weight:bold;\r\nmargin:10px auto;\r\ncolor:black;\r\n`;\r\nconst Searchbox = styled.form`\r\ndisplay:flex;\r\nflex-direction:row;\r\nmargin:20px auto;\r\nborder: solid black 1px;\r\nborder-radius:2px;\r\n& input{\r\n    padding:10px;\r\n    font-size:14px;\r\n    border:none;\r\n    outline:none;\r\n    font-weight:bold;\r\n}\r\n& button{\r\n    padding:10px;\r\n    font-size:14px;\r\n    border:none;\r\n    color:white;\r\n    background-color:black;\r\n    outline:none;\r\n    font-weight:bold;\r\n    cursor:pointer;\r\n}\r\n`;\r\n\r\n//Implementation.....\r\nfunction CityComponent(props){\r\n\r\n    return(\r\n    <>\r\n     <WeatherLogo src=\"/icons/perfect-day.svg\"/>\r\n     <CityLabel>Enter Your City Name</CityLabel>\r\n     <Searchbox onSubmit={props.getWeather}>\r\n     <input onChange={(event)=>props.onAdd(event.target.value)} \r\n     type=\"text\" placeholder=\"City name\">\r\n     </input>\r\n     <button type=\"submit\" value=\"submit\">Search</button>\r\n     </Searchbox>\r\n     </>\r\n    );\r\n}\r\n\r\nexport default CityComponent;","import styled from \"styled-components\";\r\n\r\n\r\n\r\nexport const WeatherIcons = {\r\n    \"01d\": \"/icons/sunny.svg\",\r\n    \"01n\": \"/icons/night.svg\",\r\n    \"02d\": \"/icons/day.svg\",\r\n    \"02n\": \"/icons/cloudy-night.svg\",\r\n    \"03d\": \"/icons/cloudy.svg\",\r\n    \"03n\": \"/icons/cloudy-night.svg\",\r\n    \"04d\": \"/icons/perfect-day.svg\",\r\n    \"04n\": \"/icons/perfect-night.svg\",\r\n    \"09d\": \"/icons/rain.svg\",\r\n    \"09n\": \"/icons/rain-night.svg\",\r\n    \"10d\": \"/icons/rain.svg\",\r\n    \"10n\": \"/icons/rain-night.svg\",\r\n    \"11d\": \"/icons/storm.svg\",\r\n    \"11n\": \"/icons/storm.svg\",\r\n    \"50d\": \"/icons/mist.svg\",\r\n    \"50n\": \"/icons/mist.svg\",\r\n    \"13d\": \"/icons/snow.svg\",\r\n    \"13n\": \"/icons/snow.svg\",\r\n  };\r\n\r\nconst WeatherCondition = styled.div`\r\ndisplay:flex;\r\nflex-direction:row;\r\nalign-items:center;\r\nwidth:100%;\r\njustify-content:space-between;\r\nmargin:30px auto;\r\n`;\r\nconst Condition = styled.span`\r\n${'' /* display:flex;\r\nflex-direction:row; */}\r\nfont-size:16px;\r\nmargin:5px auto;\r\n& span{\r\n    font-size:28px;\r\n}\r\n`\r\nconst WeatherLogo = styled.img`\r\nwidth:100px;\r\nheight: 100px;\r\nmargin: 10px auto;\r\n\r\n`;\r\nconst Location = styled.span`\r\nfont-size:28px;\r\nfont-weight:bold;\r\n\r\n`\r\nconst WeatherInfo = styled.span`\r\nfont-size:16px;\r\nfont-weight:bold;\r\ntext-align:start;\r\nwidth:90%;\r\nmargin:20px 25px 10px;\r\n`\r\nconst WeatherInfoContainer = styled.div`\r\n  display: flex;\r\n  width: 90%;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  margin: 5px 10px;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\nconst InfoIcon = styled.img`\r\n  width: 36px;\r\n  height: 36px;\r\n`;\r\nconst InfoLabel = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 14px;\r\n  margin: 15px;\r\n  & span {\r\n    font-size: 12px;\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\nfunction WeatherInfoComponent(props){\r\n    return(<>\r\n        <InfoContainer>\r\n            <InfoIcon src={props.icon}/>\r\n            <InfoLabel>\r\n            {props.value}\r\n            <span>{props.title}</span>\r\n\r\n            </InfoLabel>\r\n        </InfoContainer>\r\n    </>)\r\n}\r\nfunction WeatherComponent(props){\r\n    const {weather}=props;\r\n    const isDay = weather?.weather[0].icon?.includes('d')\r\n    const getTime = (timeStamp) => {\r\n        return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`\r\n    }\r\n    return (<>\r\n        <WeatherCondition>\r\n            <Condition>\r\n            <span>{Math.floor(weather?.main?.temp - 273)+\" Â°c\"}</span> | {weather?.weather[0]?.description}\r\n            </Condition>\r\n            <WeatherLogo src={WeatherIcons[weather?.weather[0].icon]}/>\r\n        </WeatherCondition>\r\n        <Location>{weather?.name},{weather?.sys?.country}</Location>\r\n        <WeatherInfo>Weather Info</WeatherInfo>\r\n        <WeatherInfoContainer>\r\n            <WeatherInfoComponent title={isDay ? \"sunset\" : \"sunrise\"}\r\n            value={`${getTime(weather?.sys[isDay ? \"sunset\" : \"sunrise\"])}${isDay ? \" PM\" :\" AM\"}`} icon=\"/icons/temp.svg\"/>\r\n            <WeatherInfoComponent title=\"Humidity\" value={weather?.main?.humidity+\" %\"} icon=\"/icons/humidity.svg\"/>\r\n            <WeatherInfoComponent title=\"Wind\" value={weather?.wind?.speed+\" m/s\"} icon=\"/icons/wind.svg\"/>\r\n            <WeatherInfoComponent title=\"Pressure\" value={weather?.main?.pressure+\" hpa\"} icon=\"/icons/pressure.svg\"/>\r\n        </WeatherInfoContainer>\r\n    </>)\r\n}\r\n\r\nexport default WeatherComponent;","import Axios from \"axios\";\nimport { useState } from 'react';\nimport styled from 'styled-components'\nimport CityComponent from './components/CityComponent';\nimport WeatherComponent from './components/WeatherComponent';\n\n\n\n//Styling Section.......\nconst Container = styled.div`\ndisplay: flex;\nflex-direction: column;\nmargin: auto;\nalign-items: center;\nbox-shadow: 0 3px 6px 0 #555;\npadding: 20px 10px;\nborder-radius: 4px;\nwidth: 380px;\nbackground: white;\nfont-family:Montserrat;\n\n`;\nconst AppLabel = styled.span`\nfont-size:18px;\nfont-weight:bold;\ncolor:black;\n`;\n\n//Main Code.........\n// const API_KEY=\"48b8ca4dc04bd3eddd8e80771a8d7e63\";\nfunction App() {\n  const [city,updateCity] = useState();\n  const [weather,updateWeather] = useState();\n\n  const fetchWeather = async(event) => {\n    event.preventDefault();\n    const response = await Axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=48b8ca4dc04bd3eddd8e80771a8d7e63`,\n    );\n    updateWeather(response.data);\n  }\n  return (\n    <Container >\n      <AppLabel>The Weather App</AppLabel>\n      {weather ? <WeatherComponent weather={weather}/>\n      : <CityComponent onAdd={updateCity} getWeather={fetchWeather}/>}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}